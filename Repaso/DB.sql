DROP DATABASE IF EXISTS FITNESSGROUP;
CREATE DATABASE IF NOT EXISTS FITNESSGROUP;
USE FITNESSGROUP;

CREATE TABLE SEDES
(
    ID       INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE   VARCHAR(30),
    APELLIDO VARCHAR(30)
);

CREATE TABLE TIPOS_DE_DOCUMENTOS
(
    ID          INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE      VARCHAR(30),
    DESCRIPCION TEXT
);

CREATE TABLE COORDINADORES
(
    ID       INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE   VARCHAR(30),
    APELLIDO VARCHAR(30)
);

CREATE TABLE ESTADOS_DE_PLANES
(
    ID          INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE      VARCHAR(20),
    DESCRIPCION TEXT
);

CREATE TABLE TIPOS_DE_PLANES
(
    ID          INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE      VARCHAR(20),
    DESCRIPCION TEXT
);

CREATE TABLE CLASES
(
    ID               INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE           VARCHAR(30),
    HORARIO          DATETIME,
    CAPACIDAD_MAXIMA INT,
    RESERVAS         INT,
    ID_SEDE          INT,
    ID_COORDINADOR   INT,
    CONSTRAINT `CLASE->SEDE` FOREIGN KEY (ID_SEDE) REFERENCES SEDES (ID),
    CONSTRAINT `CLASE->COORDINADOR` FOREIGN KEY (ID_COORDINADOR) REFERENCES COORDINADORES (ID)
);

CREATE TABLE SOCIOS
(
    ID                INT AUTO_INCREMENT PRIMARY KEY,
    NRO_DOCUMENTO     BIGINT,
    NOMBRE            VARCHAR(30),
    APELLIDO          VARCHAR(30),
    ID_TIPO_DOCUMENTO INT,
    CONSTRAINT `SOCIO->TIPO_DE_DOCUMENTO` FOREIGN KEY (ID_TIPO_DOCUMENTO) REFERENCES TIPOS_DE_DOCUMENTOS (ID)
);

CREATE TABLE PLANES
(
    ID             INT AUTO_INCREMENT PRIMARY KEY,
    FECHA_INICIO   DATE,
    FECHA_FIN      DATE,
    ID_SOCIO       INT,
    ID_ESTADO_PLAN INT,
    ID_TIPO_PLAN   INT,
    CONSTRAINT `PLAN->SOCIO` FOREIGN KEY (ID_SOCIO) REFERENCES SOCIOS (ID),
    CONSTRAINT `PLAN->ESTADO_PLAN` FOREIGN KEY (ID_ESTADO_PLAN) REFERENCES ESTADOS_DE_PLANES (ID),
    CONSTRAINT `PLAN->TIPO_PLAN` FOREIGN KEY (ID_TIPO_PLAN) REFERENCES TIPOS_DE_PLANES (ID)
);

CREATE TABLE SESIONES
(
    ID          INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE      VARCHAR(30),
    DESCRIPCION TEXT,
    ID_PLAN     INT,
    CONSTRAINT `SESION->PLAN` FOREIGN KEY (ID_PLAN) REFERENCES PLANES (ID)
);

CREATE TABLE EJERCICIOS
(
    ID           INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE       VARCHAR(30),
    DESCRIPCION  TEXT,
    REPETICIONES INT,
    SERIES       INT,
    NOTAS        TEXT,
    ID_SESION    INT,
    CONSTRAINT `EJERCICIO->SESION` FOREIGN KEY (ID_SESION) REFERENCES SESIONES (ID)
);

CREATE TABLE RESERVAS
(
    ID          INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE      VARCHAR(30),
    DESCRIPCION TEXT,
    ID_SOCIO    INT,
    ID_CLASE    INT,
    CONSTRAINT `RESERVA->SOCIO` FOREIGN KEY (ID_SOCIO) REFERENCES SOCIOS (ID),
    CONSTRAINT `RESERVA->CLASE` FOREIGN KEY (ID_CLASE) REFERENCES CLASES (ID)
);

CREATE TABLE PROGRESOS
(
    ID                    INT AUTO_INCREMENT PRIMARY KEY,
    PESO_LOGRADO          DECIMAL,
    REPETICIONES_LOGRADAS INT,
    SERIES_LOGRADAS       INT,
    OBSERVACIONES         TEXT,
    ID_EJERCICIO          INT,
    CONSTRAINT `PROGRESO->EJERCICIO` FOREIGN KEY (ID_EJERCICIO) REFERENCES EJERCICIOS (ID)
);

CREATE TABLE ASISTENCIAS
(
    ID         INT AUTO_INCREMENT PRIMARY KEY,
    ASISTENCIA BOOLEAN,
    ID_CLASE   INT,
    ID_RESERVA INT,
    CONSTRAINT `ASISTENCIA->CLASE` FOREIGN KEY (ID_CLASE) REFERENCES CLASES (ID),
    CONSTRAINT `ASISTENCIA->RESERVA` FOREIGN KEY (ID_RESERVA) REFERENCES RESERVAS (ID)
);